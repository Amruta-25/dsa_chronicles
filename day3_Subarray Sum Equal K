class Solution {
public:
    int subarraySum(vector<int>& nums, int k) {
        unordered_map<int, int> prefixSumCount;
        int prefixSum = 0;
        int count = 0;
        int n = nums.size();

        prefixSumCount[0] = 1; // for the case when prefixSum itself is equal to k

        for (int i = 0; i < n; i++) {
            prefixSum += nums[i];

            if (prefixSumCount.find(prefixSum - k) != prefixSumCount.end()) {
                count += prefixSumCount[prefixSum - k];
            }

            prefixSumCount[prefixSum]++;
        }

        return count;
    }
};
